name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  KEEP_LAST_N: 5  

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,prefix=

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Clean up old images
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

          PACKAGE_NAME=$(echo ${{ env.IMAGE_NAME }} | tr '/' '-')
          TAGS=$(gh api /users/${{ github.repository_owner }}/packages/container/$PACKAGE_NAME/versions | jq -r '.[].metadata.container.tags[]' | grep -v 'latest' | sort -V)

          TOTAL_TAGS=$(echo "$TAGS" | wc -l)
          TAGS_TO_DELETE=$((TOTAL_TAGS - ${{ env.KEEP_LAST_N }}))
          
          if [ $TAGS_TO_DELETE -gt 0 ]; then
            OLD_TAGS=$(echo "$TAGS" | head -n $TAGS_TO_DELETE)
            
            for TAG in $OLD_TAGS; do
              echo "Deleting tag: $TAG"
              VERSION_ID=$(gh api /users/${{ github.repository_owner }}/packages/container/$PACKAGE_NAME/versions | jq -r ".[] | select(.metadata.container.tags[] | contains(\"$TAG\")) | .id")
              gh api -X DELETE /users/${{ github.repository_owner }}/packages/container/$PACKAGE_NAME/versions/$VERSION_ID
            done
          fi

      - name: Deploy to server
        if: github.event_name != 'pull_request'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            docker system prune -f
            docker images ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} --format "{{.ID}}" | xargs -r docker rmi -f
            
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            
            cd ~/quantum-go
            docker compose down
            docker compose up -d